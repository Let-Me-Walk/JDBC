package JDBC;

import javax.swing.plaf.nimbus.State;
import java.sql.*;


/*
* JDBC编程六步：
* */
public class JDBCTest01 {
    public static void main(String[] args){
        Statement statement=null;
        Connection conn=null;

        try {
            //1、注册驱动
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            //Driver driver=new com.mysql.jdbc.Driver();
            //DriverManager.registerDriver(driver);

            //2、获取连接
            String url="jdbc:mysql://127.0.0.1:3306/bjpowernode";
            //url：统一资源定位符（网络中某个资源的绝对路径）
            //如www.baidu.com ，包括协议、IP、PORT、资源名;
            // jdbc：mysql： 协议
            // 127.0.0.1 IP地址
            //3306 端口
            //bjpowernode 要连接的资源名/要连接的数据库
            String user="root";
            String password="zlr199875";
            conn=DriverManager.getConnection(url,user,password);
            System.out.println("数据库连接对象= "+conn);

            //3、获取数据库操作对象
             statement= conn.createStatement();

            //4、执行sql语句
            String sql="insert into dept() values(50,'renshi','beijing')";
            //下述为专门执行DML语句的，返回影响数据库的
            int count = statement.executeUpdate(sql);
        }catch (SQLException e){
            e.printStackTrace();
        }finally {
            //6、释放资源（关闭JVM与数据库之间的进程通信）,建议使用在finally语句中，这样可以保证被释放，遵循从小到大依次关闭；
           try {
               if(statement!=null){
                   statement.close();
               }
           }catch (SQLException e){
               e.printStackTrace();
           }

           try {
               if(conn!=null){
                   conn.close();
               }
           }catch (SQLException e){
               e.printStackTrace();
           }
        }

        //5、处理查询结果集(此处未用到select查询，用的是DML语句，因此跳过5；

    }

}







-—————————————————————————————————————————————————————————————JDBC处理查询集————————————————————————————————————————————————————————————————————————————
//新增反射加载驱动
//新增配置文件加载driver，url，user，password

package JDBC;

import One.Category;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ResourceBundle;

/*
* select查询结果集处理
* */
public class JDBCTest05 {
    public static void main(String[] args) {
        Connection conn= null;
        Statement statement=null;

        ResourceBundle bundle=ResourceBundle.getBundle("jdbc");
        String driver=bundle.getString("com.jdbc.mysql.Driver");
        String url=bundle.getString("jdbc:mysql://localhost:3306/bjpowernode");
        String user=bundle.getString("root");
        String password=bundle.getString("zlr199875");
        try {
            //1.连接驱动：
            Class.forName(driver);
            //2.获取连接
            conn=DriverManager.getConnection(url,user,password);
            System.out.println("数据库连接对象+ "+conn);

            //3.获取数据库操作对象
            statement=conn.createStatement();

            //4.执行sql对象：
            String sql="select *from emp";
            int count =statement.executeUpdate(sql);
            System.out.println(count==1?"success":"fail");
            //5.处理查询结果集
            /*
            * body
            * */
        } catch (SQLException | ClassNotFoundException e){
            e.printStackTrace();
        }finally {
            try {
                if (conn!=null){
                    conn.close();
                }
            }catch (SQLException exception ){
                exception.printStackTrace();
            }

            try {

                if(statement!=null){
                    statement.close();
                }
            }catch (SQLException e){
                e.printStackTrace();
            }
        }
    }
}


_______________________________________________________JDBC模拟登录界面——————————————————————————————————————————

package JDBC;

import javax.swing.plaf.nimbus.State;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;
import java.util.ResourceBundle;
import java.util.Scanner;

/*
* 1.模拟用户登录功能的实现
* 2.描述：程序运行，提供一个输入入口，让用户输出用户名和密码
* 用户输入后，提交信息，java程序收集到用户信息
* java程序连接数据库验证用户名是否合法
* 合法：显示登录成功
* 不合法：显示登录失败
* */
public class JDBCTest07 {
    public static void main(String[] args) {
        //初始化界面
        Map<String,String> userLoginInfo=InitUI();
        //验证用户名和密码
       boolean loginSuccess=login(userLoginInfo);
       //最后输出结果
        System.out.println(loginSuccess?"Success":"Failed");

    }


    /*
    *
    * 用户登录信息，False表示失败，Success表示成功；
    *
    * */
    private static boolean login(Map<String, String> userLoginInfo) {
        Connection connection=null;
        Statement statement=null;
        ResultSet rs=null;

        ResourceBundle bundle=ResourceBundle.getBundle("jdbc");
        String url=bundle.getString("url");
        String driver =bundle.getString("driver");
        String user =bundle.getString("user");
        String password =bundle.getString("password");

        String loginName=userLoginInfo.get("loginName");
        String loginPwd=userLoginInfo.get("loginPassword");
        Boolean isSuccess=false;


        try {
            //1.注册驱动
            Class.forName("driver");
            //2.获取连接
            connection=DriverManager.getConnection(url,user,password);
            //3.获取数据库操作对象
            statement=connection.createStatement();
            //4.执行sql语句
            String sql="select *from t_user where loginName='"+loginName+"' and loginPwd='"+loginPwd+"'";
            //存在SQL注入导致错误
            rs=statement.executeQuery(sql);

            if(rs.next()){
                //登录成功
                isSuccess=true;
            }


        }catch (SQLException |ClassNotFoundException exception){
            exception.printStackTrace();
        }finally {

            try {
                if(rs!=null){
                    rs.close();
                }
            }catch (Exception e){
                e.printStackTrace();
            }

            try {
                if(statement!=null){
                    statement.close();
                }
            }catch (Exception e){
                e.printStackTrace();
            }

            try {
                if(connection!=null){
                    connection.close();
                }
            }catch (Exception e){
                e.printStackTrace();
            }
        }

        return isSuccess;
    }


    /*
    * 初始化用户界面，返回用户输入的用户名和密码等登录信息
    * */
    private static Map<String, String> InitUI() {

        Scanner scanner=new Scanner(System.in);
        System.out.println("用户名：");
        String loginName=scanner.nextLine();

        System.out.println("密码：");
        String loginPassword=scanner.nextLine();

        Map<String,String> userLoginInfo=new HashMap<>();
        userLoginInfo.put("LoginName",loginName);
        userLoginInfo.put("LoginPassword",loginPassword);

        return userLoginInfo;
    }

}








